---
title: Gorouter Back End Keep-Alive Connections
owner: CF for VMs Networking
---

This topic describes how to enable support in the Gorouter for keep-alive connections with back ends, and considerations for configuration.

For more information about support for keep-alive connections, see [Keep-Alive Connections](../concepts/http-routing.html#keepalive) in _HTTP Routing_.


## <a id="enable"></a> Enable Keep-Alive Connections from the Gorouter to Back Ends

By default, support for keep-alive connections with back ends is disabled. <%= vars.keepalive_router %>


## <a id="max-idle"></a> Considerations for Configuring Maximum Idle Keep-Alive Connections

Each Gorouter process is limited to 100,000 file descriptors. Each inbound request consumes at most two file descriptors; one for the connection from the client and one from the Gorouter to the back end. For this reason, <%= vars.recommended_by %> recommends that **Max Idle Connections** is never set higher than 50,000. As a few other file descriptors are consumed by the process under normal operation, this limit is more like 49,900.

In order to determine how many idle connections are needed, consider that the peak connections could be calculated by multiplying throughput by response time. For example, if a single Gorouter receives 1000 requests per second, and response time is 1 second, at any given time there are likely to be 1000 connections open to back ends. Accommodating for growth of 2x, an operator might configure a maximum of 2000 idle connections per Gorouter.

The Gorouter is hard-coded with a limit of 100 idle connections per back end. The configurable property `max_idle_connections` governs idle connections across all back ends.
