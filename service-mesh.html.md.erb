---
title: Service Mesh (Beta)
owner: CF Networking Service Mesh
---

This topic describes service mesh for <%= vars.app_runtime_full %> (<%= vars.app_runtime_abbr %>).

<% if vars.platform_code == 'CF' %>
To deploy service mesh, see [Deploying Service Mesh (Beta)](../running/deploying-service-mesh.html).
<% else %>
To deploy service mesh, see [Deploying Service Mesh (Beta)](../opsguide/deploying-service-mesh.html).
<% end %>


## <a id="overview"></a> Overview

<%= vars.app_runtime_abbr %> includes an optional beta routing plane that uses a service mesh. A service mesh provides traffic management, security, and observability for microservices. For more information, see [What is a service mesh?](https://istio.io/docs/concepts/what-is-istio/#what-is-a-service-mesh) in the Istio documentation.

Service mesh in <%= vars.app_runtime_abbr %> uses Istio Pilot and Envoy. The Cloud Foundry `istio-release` packages these components into a BOSH release. For more information, see [Pilot](https://istio.io/docs/concepts/what-is-istio/#pilot) in Istio documentation, [What is Envoy](https://www.envoyproxy.io/docs/envoy/latest/intro/what_is_envoy) in the Envoy documentation, and the [istio-release](https://github.com/cloudfoundry/istio-release) repository in GitHub.

Service mesh deploys an additional router and runs as a parallel routing plane as illustrated in the following diagram:

![A load balancer receives requests at *.YOUR-APPS-DOMAIN and forwards them to the Gorouter. The Gorouter then forwards them to an app. A separate load balancer receives requests at *.mesh.YOUR-APPS-DOMAIN and forwards them to the istio-router. The istio-router then forwards them to an app](service-mesh.png)


## <a id="features"></a> Features

Service mesh currently supports configuring routing weights for apps. For more information, see [Using Weighted Routing (Beta)](../devguide/weighted-routing.html).


## <a id="limitations"></a> Limitations

When deploying service mesh, consider:

* It does not have feature parity with the existing routing plane in <%= vars.app_runtime_abbr %>.
* It is for deployments with fewer than 20,000 routes. At greater scale, it can impact core platform functions.
* The control plane is not highly available and registration of new routes can be delayed during an upgrade.
* The domain for routes is `*.mesh.YOUR-APPS-DOMAIN` and is not configurable.

<p class="note breaking">
<<<<<<< HEAD
	<strong>Breaking Change</strong>: The Service Mesh feature was removed in TAS v2.11. You must disable the Service Mesh feature before upgrading to TAS v2.11.
=======
	<strong>Breaking Change</strong>: The Service Mesh feature was removed in Tanzu Application Service (TAS) v2.11. You must disable the Service Mesh feature before upgrading to TAS v2.11.
>>>>>>> 62399c5 ([#176873223] adds note about Service Mesh feature removal)
</p>

## <a id="components"></a> Component VMs

The following table describes each component VM deployed as part of service mesh in <%= vars.app_runtime_abbr %>, along with their function.

<table>
  <tr>
    <th width="20%">VM</th>
    <th width="20%">Processes</th>
    <th>Function</th>
  </tr>
  <tr>
    <td>istio-router</td>
    <td>envoy</td>
    <td>A reverse proxy to forward HTTP/HTTPS requests external to the platform to apps on the platform.</td>
  </tr>
  <tr>
    <td>istio-control</td>
    <td>copilot, pilot-discovery</td>
    <td>Propagates <%= vars.app_runtime_abbr %> external routes to all service mesh routers.</td>
  </tr>
  <tr>
    <td>route-syncer</td>
    <td>cc-route-syncer</td>
    <td>Syncs routes created through the Cloud Foundry API (CAPI) to the service mesh control plane.</td>
  </tr>
</table>

<%= vars.service_mesh_network_link %>
